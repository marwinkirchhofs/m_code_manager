
set dir_xilinx_log _T_DIR_XILINX_HW_BUILD_LOG_T_

proc mcm_prj_run_synthesis {} {
    global dir_xilinx_log

    # TODO: add other potentially set up runs here
    reset_run synth_1
    launch_runs synth_1
    wait_on_run synth_1

    open_run synth_1            -name netlist_1
    write_checkpoint            -force  $dir_xilinx_log/post_synth
    report_timing_summary       -file   $dir_xilinx_log/post_synth_timing_summary.rpt
    report_power                -file   $dir_xilinx_log/post_synth_power.rpt
}

proc mcm_prj_run_implementation {} {
    global dir_xilinx_log

    # TODO: add other potentially set up runs here
    reset_run impl_1
    launch_runs impl_1 -to_step write_bitstream
    wait_on_run impl_1

    open_run impl_1
    write_checkpoint        -force  $dir_xilinx_log/post_place
    report_timing_summary   -file   $dir_xilinx_log/post_place_timing_summary.rpt
    report_power            -file   $dir_xilinx_log/post_impl_power.rpt
}

proc mcm_run_program_fpga {} {
# TODO
    puts "one day this should program the fpga with the latest (or the selected) bitstream"
}

# if the script is called, instead of sourced
if {[info exists ::argv0] && $::argv0 eq [info script]} {
    # act on tcl argument: if none is given, build the hardware
    if {$argc >= 1} {
        switch [lindex $argv 0] {
            _T_COMMAND_BUILD_HW_T_ {
                mcm_prj_run_synthesis
                mcm_prj_run_implementation
            }
            _T_COMMAND_PROG_FPGA_T_ {
                mcm_run_program_fpga
            }
        }
    } else {
        mcm_prj_run_synthesis
        mcm_prj_run_implementation
    }
}
