#!/usr/bin/env python3
# PYTHON_ARGCOMPLETE_OK
#
# quickly, what do we need this script for? argcomplete apparently (in bash)
# neither works(in bash) with symlinks nor with aliases... I couldn't find
# anything about symlinks, that might have to do with how argcomplete integrates
# with bash. For aliases there is a git issue, but couple of years old (as of
# 24-04) and it looks like they just wont add it, also it's a bit hacky, so
# maybe it's not even on them.
# Anyway, the conclusion is: We need a callable python script in PATH which is
# named exactly the way that we want to use to invoke m_code_manager - this very
# script here. And this script in fact does nothing else than simply linking to
# main() in m_code_manager, just in a way that both argcomplete and bash
# understand and accept. It even works to do the actual arg parsing in the main,
# instead of duplicating it here, but you need this script.

import argcomplete
from argparse import ArgumentParser

import sys

# !!! INSERT PATH TO INSTALLATION DIRECTORY !!!
PATH_INSTALLATION="<installation_path>" 
# !!! ------------------------------------- !!!

sys.path.append(PATH_INSTALLATION)

from main import main

if __name__ == "__main__":
    main()
